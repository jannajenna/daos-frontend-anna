/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as PostImport } from './routes/post'
import { Route as ListOfEnsamblesImport } from './routes/list-of-ensambles'
import { Route as EnsambleImport } from './routes/ensamble'
import { Route as EditProfileImport } from './routes/edit-profile'
import { Route as EditEnsambleImport } from './routes/edit-ensamble'
import { Route as CreateProfileImport } from './routes/create-profile'
import { Route as CreatePostImport } from './routes/create-post'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const PostRoute = PostImport.update({
  id: '/post',
  path: '/post',
  getParentRoute: () => rootRoute,
} as any)

const ListOfEnsamblesRoute = ListOfEnsamblesImport.update({
  id: '/list-of-ensambles',
  path: '/list-of-ensambles',
  getParentRoute: () => rootRoute,
} as any)

const EnsambleRoute = EnsambleImport.update({
  id: '/ensamble',
  path: '/ensamble',
  getParentRoute: () => rootRoute,
} as any)

const EditProfileRoute = EditProfileImport.update({
  id: '/edit-profile',
  path: '/edit-profile',
  getParentRoute: () => rootRoute,
} as any)

const EditEnsambleRoute = EditEnsambleImport.update({
  id: '/edit-ensamble',
  path: '/edit-ensamble',
  getParentRoute: () => rootRoute,
} as any)

const CreateProfileRoute = CreateProfileImport.update({
  id: '/create-profile',
  path: '/create-profile',
  getParentRoute: () => rootRoute,
} as any)

const CreatePostRoute = CreatePostImport.update({
  id: '/create-post',
  path: '/create-post',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create-post': {
      id: '/create-post'
      path: '/create-post'
      fullPath: '/create-post'
      preLoaderRoute: typeof CreatePostImport
      parentRoute: typeof rootRoute
    }
    '/create-profile': {
      id: '/create-profile'
      path: '/create-profile'
      fullPath: '/create-profile'
      preLoaderRoute: typeof CreateProfileImport
      parentRoute: typeof rootRoute
    }
    '/edit-ensamble': {
      id: '/edit-ensamble'
      path: '/edit-ensamble'
      fullPath: '/edit-ensamble'
      preLoaderRoute: typeof EditEnsambleImport
      parentRoute: typeof rootRoute
    }
    '/edit-profile': {
      id: '/edit-profile'
      path: '/edit-profile'
      fullPath: '/edit-profile'
      preLoaderRoute: typeof EditProfileImport
      parentRoute: typeof rootRoute
    }
    '/ensamble': {
      id: '/ensamble'
      path: '/ensamble'
      fullPath: '/ensamble'
      preLoaderRoute: typeof EnsambleImport
      parentRoute: typeof rootRoute
    }
    '/list-of-ensambles': {
      id: '/list-of-ensambles'
      path: '/list-of-ensambles'
      fullPath: '/list-of-ensambles'
      preLoaderRoute: typeof ListOfEnsamblesImport
      parentRoute: typeof rootRoute
    }
    '/post': {
      id: '/post'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-post': typeof CreatePostRoute
  '/create-profile': typeof CreateProfileRoute
  '/edit-ensamble': typeof EditEnsambleRoute
  '/edit-profile': typeof EditProfileRoute
  '/ensamble': typeof EnsambleRoute
  '/list-of-ensambles': typeof ListOfEnsamblesRoute
  '/post': typeof PostRoute
  '/profile': typeof ProfileRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-post': typeof CreatePostRoute
  '/create-profile': typeof CreateProfileRoute
  '/edit-ensamble': typeof EditEnsambleRoute
  '/edit-profile': typeof EditProfileRoute
  '/ensamble': typeof EnsambleRoute
  '/list-of-ensambles': typeof ListOfEnsamblesRoute
  '/post': typeof PostRoute
  '/profile': typeof ProfileRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create-post': typeof CreatePostRoute
  '/create-profile': typeof CreateProfileRoute
  '/edit-ensamble': typeof EditEnsambleRoute
  '/edit-profile': typeof EditProfileRoute
  '/ensamble': typeof EnsambleRoute
  '/list-of-ensambles': typeof ListOfEnsamblesRoute
  '/post': typeof PostRoute
  '/profile': typeof ProfileRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-post'
    | '/create-profile'
    | '/edit-ensamble'
    | '/edit-profile'
    | '/ensamble'
    | '/list-of-ensambles'
    | '/post'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-post'
    | '/create-profile'
    | '/edit-ensamble'
    | '/edit-profile'
    | '/ensamble'
    | '/list-of-ensambles'
    | '/post'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/create-post'
    | '/create-profile'
    | '/edit-ensamble'
    | '/edit-profile'
    | '/ensamble'
    | '/list-of-ensambles'
    | '/post'
    | '/profile'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreatePostRoute: typeof CreatePostRoute
  CreateProfileRoute: typeof CreateProfileRoute
  EditEnsambleRoute: typeof EditEnsambleRoute
  EditProfileRoute: typeof EditProfileRoute
  EnsambleRoute: typeof EnsambleRoute
  ListOfEnsamblesRoute: typeof ListOfEnsamblesRoute
  PostRoute: typeof PostRoute
  ProfileRoute: typeof ProfileRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreatePostRoute: CreatePostRoute,
  CreateProfileRoute: CreateProfileRoute,
  EditEnsambleRoute: EditEnsambleRoute,
  EditProfileRoute: EditProfileRoute,
  EnsambleRoute: EnsambleRoute,
  ListOfEnsamblesRoute: ListOfEnsamblesRoute,
  PostRoute: PostRoute,
  ProfileRoute: ProfileRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create-post",
        "/create-profile",
        "/edit-ensamble",
        "/edit-profile",
        "/ensamble",
        "/list-of-ensambles",
        "/post",
        "/profile"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create-post": {
      "filePath": "create-post.tsx"
    },
    "/create-profile": {
      "filePath": "create-profile.tsx"
    },
    "/edit-ensamble": {
      "filePath": "edit-ensamble.tsx"
    },
    "/edit-profile": {
      "filePath": "edit-profile.tsx"
    },
    "/ensamble": {
      "filePath": "ensamble.tsx"
    },
    "/list-of-ensambles": {
      "filePath": "list-of-ensambles.tsx"
    },
    "/post": {
      "filePath": "post.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
